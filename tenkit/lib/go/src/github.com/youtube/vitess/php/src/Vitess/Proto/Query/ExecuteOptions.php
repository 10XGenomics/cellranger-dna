<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin 1.0
// Source: query.proto

namespace Vitess\Proto\Query {

  class ExecuteOptions extends \DrSlump\Protobuf\Message {

    /**  @var boolean */
    public $include_event_token = null;
    
    /**  @var \Vitess\Proto\Query\EventToken */
    public $compare_event_token = null;
    
    /**  @var int - \Vitess\Proto\Query\ExecuteOptions\IncludedFields */
    public $included_fields = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'query.ExecuteOptions');

      // OPTIONAL BOOL include_event_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "include_event_token";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE compare_event_token = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "compare_event_token";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\Vitess\Proto\Query\EventToken';
      $descriptor->addField($f);

      // OPTIONAL ENUM included_fields = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "included_fields";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\Vitess\Proto\Query\ExecuteOptions\IncludedFields';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <include_event_token> has a value
     *
     * @return boolean
     */
    public function hasIncludeEventToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <include_event_token> value
     *
     * @return \Vitess\Proto\Query\ExecuteOptions
     */
    public function clearIncludeEventToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <include_event_token> value
     *
     * @return boolean
     */
    public function getIncludeEventToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <include_event_token> value
     *
     * @param boolean $value
     * @return \Vitess\Proto\Query\ExecuteOptions
     */
    public function setIncludeEventToken( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <compare_event_token> has a value
     *
     * @return boolean
     */
    public function hasCompareEventToken(){
      return $this->_has(3);
    }
    
    /**
     * Clear <compare_event_token> value
     *
     * @return \Vitess\Proto\Query\ExecuteOptions
     */
    public function clearCompareEventToken(){
      return $this->_clear(3);
    }
    
    /**
     * Get <compare_event_token> value
     *
     * @return \Vitess\Proto\Query\EventToken
     */
    public function getCompareEventToken(){
      return $this->_get(3);
    }
    
    /**
     * Set <compare_event_token> value
     *
     * @param \Vitess\Proto\Query\EventToken $value
     * @return \Vitess\Proto\Query\ExecuteOptions
     */
    public function setCompareEventToken(\Vitess\Proto\Query\EventToken $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <included_fields> has a value
     *
     * @return boolean
     */
    public function hasIncludedFields(){
      return $this->_has(4);
    }
    
    /**
     * Clear <included_fields> value
     *
     * @return \Vitess\Proto\Query\ExecuteOptions
     */
    public function clearIncludedFields(){
      return $this->_clear(4);
    }
    
    /**
     * Get <included_fields> value
     *
     * @return int - \Vitess\Proto\Query\ExecuteOptions\IncludedFields
     */
    public function getIncludedFields(){
      return $this->_get(4);
    }
    
    /**
     * Set <included_fields> value
     *
     * @param int - \Vitess\Proto\Query\ExecuteOptions\IncludedFields $value
     * @return \Vitess\Proto\Query\ExecuteOptions
     */
    public function setIncludedFields( $value){
      return $this->_set(4, $value);
    }
  }
}

